-- Agregar producto o combo a un pedido
CREATE OR REPLACE PROCEDURE RESTAURANTE.SP_I_DETALLE_PEDIDO (
  p_PEDIDO_ID IN NUMBER,
  p_PRODUCTO_ID IN NUMBER,
  p_MENU_ID IN NUMBER,
  p_CANTIDAD IN NUMBER,
  p_PRECIO IN NUMBER
) AS
BEGIN
  INSERT INTO RESTAURANTE.TBL_DETALLE_PEDIDO (PEDIDO_ID, PRODUCTO_ID, MENU_ID, CANTIDAD, PRECIO, ESTADO, HORA_SOLICITUD)
  VALUES (p_PEDIDO_ID, p_PRODUCTO_ID, p_MENU_ID, p_CANTIDAD, p_PRECIO, 'En preparaci�n', SYSTIMESTAMP);
  
  COMMIT;
END SP_I_DETALLE_PEDIDO;
/

-- Consultar pedidos en preparaci�n
CREATE OR REPLACE PROCEDURE RESTAURANTE.SP_S_PEDIDO_COCINA (p_cursor OUT SYS_REFCURSOR) AS
BEGIN
OPEN p_cursor FOR
  SELECT D.ID, D.PEDIDO_ID, M.NUMERO AS NUMERO_MESA, P.NOMBRE AS PRODUCTO, D.CANTIDAD, D.ESTADO
  FROM RESTAURANTE.TBL_DETALLE_PEDIDO D
  JOIN RESTAURANTE.TBL_PEDIDO PE ON D.PEDIDO_ID = PE.ID
  JOIN RESTAURANTE.TBL_MESA M ON PE.MESA_ID = M.ID
  JOIN RESTAURANTE.TBL_PRODUCTO P ON D.PRODUCTO_ID = P.ID
  WHERE D.ESTADO = 'En preparaci�n';

END SP_S_PEDIDO_COCINA;
/

-- Actualizar estado de pedido en cocina
CREATE OR REPLACE PROCEDURE RESTAURANTE.SP_U_ESTADO_PEDIDO (
  p_DETALLE_PEDIDO_ID IN NUMBER,
  p_ESTADO IN VARCHAR2
) AS
BEGIN
  UPDATE RESTAURANTE.TBL_DETALLE_PEDIDO
  SET ESTADO = p_ESTADO
  WHERE ID = p_DETALLE_PEDIDO_ID;
  
  COMMIT;
END SP_U_ESTADO_PEDIDO;
/

