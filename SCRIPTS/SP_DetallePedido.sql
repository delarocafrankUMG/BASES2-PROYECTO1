-- Agregar producto o combo a un pedido
CREATE OR REPLACE PROCEDURE RESTAURANTE.SP_I_DETALLE_PEDIDO (
  p_PEDIDO_ID IN NUMBER,
  p_PRODUCTO_ID IN NUMBER,
  p_MENU_ID IN NUMBER,
  p_CANTIDAD IN NUMBER,
  p_PRECIO IN NUMBER
) AS
BEGIN
  INSERT INTO RESTAURANTE.TBL_DETALLE_PEDIDO (PEDIDO_ID, PRODUCTO_ID, MENU_ID, CANTIDAD, PRECIO, ESTADO, HORA_SOLICITUD)
  VALUES (p_PEDIDO_ID, p_PRODUCTO_ID, p_MENU_ID, p_CANTIDAD, p_PRECIO, 'Pendiente', SYSTIMESTAMP);
  
  COMMIT;
END SP_I_DETALLE_PEDIDO;
/

-- Consultar pedidos a preparar
CREATE OR REPLACE PROCEDURE RESTAURANTE.SP_S_PEDIDO_COCINA (p_cursor OUT SYS_REFCURSOR) AS
BEGIN
OPEN p_cursor FOR
  SELECT D.ID, D.PEDIDO_ID, M.ID AS NUMERO_MESA, P.NOMBRE AS PRODUCTO, D.CANTIDAD, D.ESTADO
  FROM RESTAURANTE.TBL_DETALLE_PEDIDO D
  JOIN RESTAURANTE.TBL_PEDIDO PE ON D.PEDIDO_ID = PE.ID
  JOIN RESTAURANTE.TBL_MESA M ON PE.MESA_ID = M.ID
  JOIN RESTAURANTE.TBL_PRODUCTO P ON D.PRODUCTO_ID = P.ID
  WHERE D.ESTADO <> 'Despachado'
  UNION ALL 
    SELECT D.ID, D.PEDIDO_ID, M.ID AS NUMERO_MESA, P.NOMBRE AS PRODUCTO, D.CANTIDAD, D.ESTADO
  FROM RESTAURANTE.TBL_DETALLE_PEDIDO D
  JOIN RESTAURANTE.TBL_PEDIDO PE ON D.PEDIDO_ID = PE.ID
  JOIN RESTAURANTE.TBL_MESA M ON PE.MESA_ID = M.ID
  JOIN RESTAURANTE.TBL_MENU P ON D.MENU_ID = P.ID
  WHERE D.ESTADO <> 'Despachado';

END SP_S_PEDIDO_COCINA;
/

-- Actualizar estado de pedido en cocina
CREATE OR REPLACE PROCEDURE RESTAURANTE.SP_U_ESTADO_PEDIDO (
  p_DETALLE_PEDIDO_ID IN NUMBER,
  p_ESTADO IN VARCHAR2
) AS
BEGIN
  UPDATE RESTAURANTE.TBL_DETALLE_PEDIDO
  SET ESTADO = p_ESTADO
  WHERE ID = p_DETALLE_PEDIDO_ID;
  
  COMMIT;
END SP_U_ESTADO_PEDIDO;
/

-- Seleccionar todos los productos
CREATE OR REPLACE PROCEDURE RESTAURANTE.SP_S_PRODUCTO (p_cursor OUT SYS_REFCURSOR) AS
BEGIN
  OPEN p_cursor FOR
    SELECT ID, NOMBRE, TIPO, PRECIO 
    FROM RESTAURANTE.TBL_PRODUCTO;
END SP_S_PRODUCTO;
/

-- Seleccionar todos los menus
CREATE OR REPLACE PROCEDURE RESTAURANTE.SP_S_MENU (p_cursor OUT SYS_REFCURSOR) AS
BEGIN
  OPEN p_cursor FOR
    SELECT ID, NOMBRE, PRECIO 
    FROM RESTAURANTE.TBL_MENU;
END SP_S_MENU;
/

-- Seleccionar los productos de un menu especifico
CREATE OR REPLACE PROCEDURE RESTAURANTE.SP_S_MENU_PRODUCTO (p_MENU_ID IN NUMBER, p_cursor OUT SYS_REFCURSOR) AS
BEGIN
  OPEN p_cursor FOR
    SELECT MP.ID, M.NOMBRE AS MENU, P.NOMBRE, MP.CANTIDAD
    FROM RESTAURANTE.TBL_MENU_PRODUCTO MP
    JOIN RESTAURANTE.TBL_MENU M ON MP.MENU_ID = M.ID
    JOIN RESTAURANTE.TBL_PRODUCTO P ON MP.PRODUCTO_ID = P.ID
    WHERE MP.MENU_ID = p_MENU_ID;
END SP_S_MENU_PRODUCTO;
/

-- Insertar pedido por mesa
CREATE OR REPLACE PROCEDURE RESTAURANTE.SP_I_PEDIDO (
    p_mesa_id IN NUMBER,
    p_empleado_id IN NUMBER,
    p_cursor OUT SYS_REFCURSOR
) AS
    v_pedido_id NUMBER;
BEGIN
    INSERT INTO RESTAURANTE.TBL_PEDIDO (MESA_ID, EMPLEADO_ID, ESTADO, HORA_INICIO)
    VALUES (p_mesa_id, p_empleado_id, 'Pendiente', SYSTIMESTAMP)
    RETURNING ID INTO v_pedido_id;

    OPEN p_cursor FOR
    SELECT P.ID, P.MESA_ID, M.ID AS NUMERO_MESA, P.EMPLEADO_ID, E.NOMBRE AS EMPLEADO,
           P.ESTADO, P.HORA_INICIO, P.HORA_FIN
    FROM RESTAURANTE.TBL_PEDIDO P
    JOIN RESTAURANTE.TBL_MESA M ON P.MESA_ID = M.ID
    JOIN RESTAURANTE.TBL_EMPLEADO E ON P.EMPLEADO_ID = E.ID
    WHERE P.ID = v_pedido_id;

    COMMIT;
END SP_I_PEDIDO;
/
-- Pedidos por Mesa
CREATE OR REPLACE NONEDITIONABLE PROCEDURE SP_S_PEDIDOS_POR_MESA (
    p_mesa_id IN NUMBER,
    p_cursor OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN p_cursor FOR
    SELECT PE.ID AS PEDIDO_ID, 
           M.ID AS NUMERO_MESA, 
           PE.ESTADO,
           COALESCE((SELECT SUM(DP.CANTIDAD * DP.PRECIO)
                     FROM RESTAURANTE.TBL_DETALLE_PEDIDO DP
                     WHERE DP.PEDIDO_ID = PE.ID), 0) AS TOTAL
    FROM RESTAURANTE.TBL_PEDIDO PE
    JOIN RESTAURANTE.TBL_MESA M ON PE.MESA_ID = M.ID
    WHERE M.ID = p_mesa_id 
      AND (PE.ESTADO = 'Pendiente' OR PE.ESTADO = 'En proceso');
END SP_S_PEDIDOS_POR_MESA;