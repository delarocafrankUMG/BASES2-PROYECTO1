-- Seleccionar todas las mesas
CREATE OR REPLACE PROCEDURE RESTAURANTE.SP_S_MESA(p_cursor OUT SYS_REFCURSOR) AS
BEGIN
  OPEN p_cursor FOR SELECT * FROM RESTAURANTE.TBL_MESA; 
END SP_S_MESA;
/

-- Cambiar el estado de una mesa
CREATE OR REPLACE PROCEDURE RESTAURANTE.SP_U_MESA_ESTADO (
  p_ID IN NUMBER,
  p_ESTADO IN VARCHAR2,
  p_EMPLEADO_ID IN NUMBER
) AS
BEGIN
  -- Actualizar el estado de la mesa
  UPDATE RESTAURANTE.TBL_MESA
  SET ESTADO = p_ESTADO
  WHERE ID = p_ID;

  -- Si el estado es 'Ocupado', crear un nuevo pedido
  IF UPPER(p_ESTADO) = 'OCUPADO' THEN
    INSERT INTO RESTAURANTE.TBL_PEDIDO (MESA_ID, EMPLEADO_ID, ESTADO, HORA_INICIO)
    VALUES (p_ID, p_EMPLEADO_ID, 'Pendiente', SYSTIMESTAMP);
  END IF;

  COMMIT;
END SP_U_MESA_ESTADO;
/

CREATE OR REPLACE PROCEDURE SP_I_MESA (p_numero NUMBER, p_estado VARCHAR2) AS
BEGIN
  INSERT INTO RESTAURANTE.TBL_MESA (NUMERO, ESTADO) VALUES (p_numero, p_estado);
  COMMIT;
END SP_I_MESA;
/