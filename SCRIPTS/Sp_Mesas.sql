-- Seleccionar todas las mesas
CREATE OR REPLACE PROCEDURE RESTAURANTE.SP_S_MESA(p_cursor OUT SYS_REFCURSOR) AS
BEGIN
  OPEN p_cursor FOR SELECT * FROM RESTAURANTE.TBL_MESA; 
END SP_S_MESA;
/

-- Cambiar el estado de una mesa
CREATE OR REPLACE PROCEDURE RESTAURANTE.SP_U_MESA_ESTADO (
  p_ID IN NUMBER,
  p_ESTADO IN VARCHAR2
) AS
BEGIN
  -- Actualizar el estado de la mesa
  UPDATE RESTAURANTE.TBL_MESA
  SET ESTADO = p_ESTADO
  WHERE ID = p_ID;
  COMMIT;
END SP_U_MESA_ESTADO;
/

CREATE OR REPLACE PROCEDURE SP_I_MESA (p_numero NUMBER, p_estado VARCHAR2) AS
BEGIN
  INSERT INTO RESTAURANTE.TBL_MESA (NUMERO, ESTADO) VALUES (p_numero, p_estado);
  COMMIT;
END SP_I_MESA;
/

-- Crear un pedido
CREATE OR REPLACE PROCEDURE RESTAURANTE.SP_I_PEDIDO (
    p_mesa_id IN NUMBER,
    p_pedido_id OUT NUMBER
) AS
BEGIN
    INSERT INTO RESTAURANTE.TBL_PEDIDO (MESA_ID, ESTADO)
    VALUES (p_mesa_id, 'Pendiente')
    RETURNING ID INTO p_pedido_id;

    COMMIT;
END SP_I_PEDIDO;
/
